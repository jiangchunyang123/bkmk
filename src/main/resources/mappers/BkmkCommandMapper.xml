<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eve.bookmarks.dao.BkmkCommandMapper">
  <resultMap id="BaseResultMap" type="com.eve.bookmarks.entitys.po.BkmkCommand">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="command" jdbcType="INTEGER" property="command" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="end_version" jdbcType="BIGINT" property="endVersion" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="start_version" jdbcType="BIGINT" property="startVersion" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="book_mark_mysql_id" jdbcType="BIGINT" property="bookMarkMysqlId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, command, create_time, end_version, path, start_version, state, update_time, book_mark_mysql_id
  </sql>
  <select id="selectByExample" parameterType="com.eve.bookmarks.entitys.po.BkmkCommandExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bkmk_command
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bkmk_command
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bkmk_command
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.eve.bookmarks.entitys.po.BkmkCommandExample">
    delete from bkmk_command
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="save" parameterType="com.eve.bookmarks.entitys.po.BkmkCommand" useGeneratedKeys="true"  keyProperty="id">
    insert into bkmk_command (command, create_time, end_version, 
      path, start_version, state, 
      update_time, book_mark_mysql_id)
    values (#{command,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{endVersion,jdbcType=BIGINT}, 
      #{path,jdbcType=VARCHAR}, #{startVersion,jdbcType=BIGINT}, #{state,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{bookMarkMysqlId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.eve.bookmarks.entitys.po.BkmkCommand">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bkmk_command
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="command != null">
        command,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="endVersion != null">
        end_version,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="startVersion != null">
        start_version,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="bookMarkMysqlId != null">
        book_mark_mysql_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="command != null">
        #{command,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endVersion != null">
        #{endVersion,jdbcType=BIGINT},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="startVersion != null">
        #{startVersion,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookMarkMysqlId != null">
        #{bookMarkMysqlId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eve.bookmarks.entitys.po.BkmkCommandExample" resultType="java.lang.Long">
    select count(*) from bkmk_command
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bkmk_command
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.command != null">
        command = #{record.command,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endVersion != null">
        end_version = #{record.endVersion,jdbcType=BIGINT},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.startVersion != null">
        start_version = #{record.startVersion,jdbcType=BIGINT},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bookMarkMysqlId != null">
        book_mark_mysql_id = #{record.bookMarkMysqlId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bkmk_command
    set id = #{record.id,jdbcType=BIGINT},
      command = #{record.command,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      end_version = #{record.endVersion,jdbcType=BIGINT},
      path = #{record.path,jdbcType=VARCHAR},
      start_version = #{record.startVersion,jdbcType=BIGINT},
      state = #{record.state,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      book_mark_mysql_id = #{record.bookMarkMysqlId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eve.bookmarks.entitys.po.BkmkCommand">
    update bkmk_command
    <set>
      <if test="command != null">
        command = #{command,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endVersion != null">
        end_version = #{endVersion,jdbcType=BIGINT},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="startVersion != null">
        start_version = #{startVersion,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookMarkMysqlId != null">
        book_mark_mysql_id = #{bookMarkMysqlId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eve.bookmarks.entitys.po.BkmkCommand">
    update bkmk_command
    set command = #{command,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      end_version = #{endVersion,jdbcType=BIGINT},
      path = #{path,jdbcType=VARCHAR},
      start_version = #{startVersion,jdbcType=BIGINT},
      state = #{state,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      book_mark_mysql_id = #{bookMarkMysqlId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findCommands" parameterType="map">
    select * from bkmk_command cmd where cmd.start_version &lt;= ${version} and cmd.end_version >=${version}
    and cmd.state = ${state} order by cmd.create_time
  </select>
</mapper>